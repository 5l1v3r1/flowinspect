flowsrch v0.1 - Ankur Tyagi (7h3rAm)
Juniper Networks - Security Research Group

A Flowgrep-like tool for network traffic inspection. It uses pynids to defragment IP/reassemble TCP packets. Such flows are then inspected using Python's "re" module that supports PCRE-like patterns, case-insensitive, invert and multiline matches, etc. Match scope could be limited through BPF expressions or via packets/streams/bytes inspection limit flags. Flows could also be logged to files in addition to being dumped on stdout. A few useful output modes help with further anaylysis.

You could request inspection per direction or for both CTS and STC directions. However, each pattern is inspected only once per stream, per direction. For multiple patterns, matching happens independently and as such previous match results won't affect subsequent matches. For UDP, since there is no flow to search upon, matches happen over individual packet payloads.

HELP:
usage: flowsrch.py [-h] (-d --device | -p --pcap) [-f --filter] [-C --cregex]
                   [-S --sregex] [-A --aregex] [-i] [-v] [-m]
                   [-T --maxinspstreams] [-U --maxinsppackets]
                   [-B --maxinspbytes] [-t --maxdispstreams]
                   [-u --maxdisppackets] [-b --maxdispbytes] [-w [logdir]]
                   [-k] [-o {quite,meta,hex,print,raw}] [-V]

optional arguments:
  -h, --help            show this help message and exit
  -d --device           listening device
  -p --pcap             input pcap file
  -f --filter           BPF expression
  -C --cregex           regex to match against client stream
  -S --sregex           regex to match against server stream
  -A --aregex           regex to match against any stream
  -i                    ignore case
  -v                    invert match
  -m                    multiline match
  -T --maxinspstreams   max streams to inspect
  -U --maxinsppackets   max packets to inspect
  -B --maxinspbytes     max bytes to inspect
  -t --maxdispstreams   max streams to display
  -u --maxdisppackets   max packets to display
  -b --maxdispbytes     max bytes to display
  -w [logdir]           write matching packets/streams
  -k                    kill matching TCP stream
  -o {quite,meta,hex,print,raw}
                        match output mode
  -V                    show program's version number and exit


EXAMPLES:
1. Look at HTTP sessions:
# ./flowsrch.py -d eth0 -C "^(GET|POST|HEAD|PUT).*" -f "tcp and port 80" -o ascii

2. Stop Metasploit .jar downloads:
# ./flowsrch.py -d eth0 -S "PK\x03\x04.*metasploit" -k

3. Quickly scan for Blackhole Exploit Kit infections (enable multiline match and restrict display to max 64B):
# ./flowsrch.py -d eth0 -C "/forum/links/(column|news)\.php\?\w+=(\d\w:?)+" -mb64

4. Inspect HTTP streams for Metasploit ie_cgenericelement_uaf exploit (CVE-2013-1347):
# ./flowsrch.py -p msfiecgenericelement.pcap -S "CollectGarbage\(\);.*mstime_malloc\({shellcode:magenta, heapBlockSize:0x38, objId:"myanim"}\);" -f "not udp"


INSTALLATION:
Make sure you have a working Python installation. The only other dependency is pynids which you can grab from here: http://jon.oberheide.org/pynids/. Reach out if you need help setting up pynids or for any other queries.

